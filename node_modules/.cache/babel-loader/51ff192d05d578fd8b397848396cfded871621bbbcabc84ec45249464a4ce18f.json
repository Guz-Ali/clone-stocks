{"ast":null,"code":"var _jsxFileName = \"/Users/aliguzelyel/Desktop/Projects/clone-stocks/clone-stocks/src/LineGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./LineGraph.css\";\nimport 'chartjs-adapter-date-fns';\nimport { enUS } from 'date-fns/locale';\n// import { Line as LineJS } from 'chart.js/auto'\n// import { Line } from \"react-chartjs-2\";\n\nimport { Chart as ChartJS, CategoryScale, LinearScale, ScatterController, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, ScatterController, Title, Tooltip, Legend);\nfunction LineGraph() {\n  _s();\n  const [graphData, setGraphData] = useState([]);\n  const labels = graphData.map(dataVal => dataVal.x);\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: \"test\",\n      type: \"scatter\",\n      data: graphData,\n      backgroundColor: \"#071106\",\n      borderColor: \"#49B540\",\n      borderWidth: 2,\n      pointBorderColor: 'rgba(0,0,0,0)',\n      pointBackgroundColor: 'rgba(0,0,0,0)',\n      showLine: true,\n      pointHoverBackgroundColor: \"#49B540\",\n      pointHoverBorderColor: '#000000',\n      pointHoverBorderWidth: 4,\n      pointHoverRadius: 6\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: \"index\",\n        intersect: false\n      }\n    },\n    scales: {\n      x: {\n        type: \"time\",\n        adapters: {\n          date: {\n            locale: enUS\n          }\n        },\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\"\n        },\n        display: false\n      },\n      y: {\n        display: false\n      }\n    }\n  };\n  const createMockData = () => {\n    let data = [];\n    let value = 50;\n    for (var i = 0; i < 365; i++) {\n      let date = new Date();\n      date.setHours(0, 0, 0, 0);\n      date.setDate(i);\n      value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\n      data.push({\n        x: date,\n        y: value\n      });\n    }\n    setGraphData(data);\n  };\n  useEffect(() => {\n    createMockData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"linegraph\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(LineGraph, \"FUpvZ6R9oqj1CmCRxQdzrYANtCU=\");\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","useEffect","useState","enUS","Chart","ChartJS","CategoryScale","LinearScale","ScatterController","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","LineGraph","_s","graphData","setGraphData","labels","map","dataVal","x","data","datasets","label","type","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBackgroundColor","showLine","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","options","plugins","legend","display","tooltip","mode","intersect","scales","adapters","date","locale","time","format","tooltipFormat","y","createMockData","value","i","Date","setHours","setDate","Math","round","random","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aliguzelyel/Desktop/Projects/clone-stocks/clone-stocks/src/LineGraph.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./LineGraph.css\";\nimport 'chartjs-adapter-date-fns';\nimport { enUS } from 'date-fns/locale';\n// import { Line as LineJS } from 'chart.js/auto'\n// import { Line } from \"react-chartjs-2\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  ScatterController,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  ScatterController,\n  Title,\n  Tooltip,\n  Legend,\n);\n\n\n\nfunction LineGraph() {\n\n  const [ graphData, setGraphData] = useState([]);\n\n  const labels = graphData.map(dataVal => dataVal.x);\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"test\", \n        type: \"scatter\",\n        data: graphData,\n        backgroundColor: \"#071106\",\n        borderColor: \"#49B540\",\n        borderWidth:2,\n        pointBorderColor: 'rgba(0,0,0,0)',\n        pointBackgroundColor: 'rgba(0,0,0,0)',\n        showLine: true,\n        pointHoverBackgroundColor: \"#49B540\",\n        pointHoverBorderColor: '#000000',\n        pointHoverBorderWidth: 4,\n        pointHoverRadius: 6,\n      }\n    ]\n  }\n  const options = {\n    plugins:{\n      legend: {\n      display: false\n      },\n      tooltip:{\n        mode: \"index\",\n        intersect: false\n      },\n    },\n    \n    scales: { \n      x: {\n        type: \"time\",\n        adapters: {\n          date: {\n            locale: enUS\n          }\n        },\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\"\n        },\n        display: false,\n      },\n      y: {\n        display: false,\n      }\n    }\n  }\n\n  const createMockData = () => {\n    let data = [];\n    let value = 50;\n    for(var i=0; i< 365; i++){\n      let date = new Date();\n      date.setHours(0,0,0,0);\n      date.setDate(i);\n      value += Math.round((Math.random() < 0.5 ? 1 : 0 ) * Math.random() * 10);\n      data.push({x: date, y:value})\n    }\n    setGraphData(data);\n  }\n\n  useEffect(() => {\n    createMockData();\n\n  }, [])\n\n  return (\n    <div className=\"linegraph\">\n      <Line data={data} options={options}/>\n    </div>\n  );\n}\n\nexport default LineGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}